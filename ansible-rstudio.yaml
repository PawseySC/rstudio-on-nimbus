---
- name: Building and running RStudio container
  hosts: localhost
  vars_prompt:
  - name: R_version
    prompt: "Enter the R version you require (either 4.1.0 and 4.2.0)"
    private: no  
  - name: R_tools
    prompt: "Enter the R package tool you require as a space-separated list if more than one, e.g. tool1 tool2 tool3. If irrelevant, just press enter"
    private: no
  - name: BiocManager_tools
    prompt: 'Enter the BiocManager tool you require, in the format (c(\"tool\")), as a comma-separated list if more than one, e.g. (c(\"tool1\",\"tool2\",\"tool3\")). If irrelevant, just press enter'
    private: no
  - name: container_name
    prompt: "Give the container a name (no capitals) (blank not accepted)"
    private: no
  - name: container_version
    prompt: "Give the container a version number"
    private: no
  - name: rstudio_password
    prompt: "Give a simple password for your RStudio session, e.g. abc"
    private: no
  tasks:
  - name: Print R version number
    shell: echo {{ R_version }}
    register: R_version_number
  - name: Mount data folder
    shell: |
      DATADIR="/data"
      DIR="/dev/vdc"
      DIR2="/dev/sdc"
      if grep -qs /dev/vdc /proc/mounts; then
        true
      else
        if [[ -d "$DIR" ]]; then
          true
        else
         sudo mkfs.ext4 /dev/vdc
         sudo mount /dev/vdc /data
         mkdir /data/containers
        fi
      fi
      if grep -qs /dev/sdc /proc/mounts; then
        true
      else
        if [[ -d "$DIR" ]]; then
          true
        else
         sudo mkfs.ext4 /dev/sdc
         sudo mount /dev/sdc /data
         mkdir /data/containers
        fi
      fi      
    become: yes
    ignore_errors: yes
  - name: Completing the Dockerfile
    shell: |
      cp Dockerfile Dockerfile-{{ container_name }}_{{ container_version }}
      sed -i "s|rstudio:4.1.0|rstudio:{{ R_version }}|g" Dockerfile-{{ container_name }}_{{ container_version }}
      sed -i "s|caTools|caTools {{ R_tools }}|g" Dockerfile-{{ container_name }}_{{ container_version }}
      echo "RUN R -e 'library(BiocManager)' \
      && R -e 'BiocManager::install({{ BiocManager_tools }})'" >> Dockerfile-{{ container_name }}_{{ container_version }}
    args:
      warn: false
  - name: Adding containers directory
    ansible.builtin.file:
      path: /data/containers
      state: directory
  - name: Building the Docker image
    command: docker build -f Dockerfile-{{ container_name }}_{{ container_version }} -t {{ container_name }}:{{ container_version }} .
    become: yes
  - name: Building the Singularity container
    command: singularity pull --dir /data/containers/ docker-daemon:{{ container_name }}:{{ container_version }}
    become: yes
    args:
      creates: "/data/containers/{{ container_name }}_{{ container_version }}.sif"
  - name: Create RStudio server folder
    command: mkdir -p /tmp/rstudio-server
    args:  
      creates: /tmp/rstudio-server 
  - name: Run rserver command
    shell: PASSWORD='{{ rstudio_password }}' singularity exec -B /tmp/rstudio-server:/var/lib/rstudio-server -B /tmp/rstudio-server:/var/run/rstudio-server -B /data:/home /data/containers/{{ container_name }}_{{ container_version }}.sif rserver --auth-none=0 --auth-pam-helper-path=pam-helper --server-user ubuntu &
  - name: Print message
    command: echo "Go to a web browser to login to the RStudio session using your Nimbus instance IP address, e.g. 146.118.XX.XX:8787. (If you have not opened port 8787, go to https://support.pawsey.org.au/documentation/pages/viewpage.action?pageId=59476382#RunRStudioInteractively-1.Openport8787onNimbusdashboard)."
